name: Register managed cluster with admin cluster
on: [push]    
jobs:
  register_managed_cluster:
    runs-on: ubuntu-latest
    steps:
      - name: Write Config & Key Files
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{secrets.OCI_USER_OCID}}" >> ~/.oci/config
          echo "fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.oci/config
          echo "region=${{secrets.OCI_REGION}}" >> ~/.oci/config
          echo "tenancy=${{secrets.OCI_TENANCY_OCID}}" >> ~/.oci/config
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config
          echo "${{secrets.OCI_KEY_FILE}}" >> ~/.oci/key.pem
      - name: Install OCI CLI
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults
          echo "/home/runner/bin" >> $GITHUB_PATH
          exec -l $SHELL
      - name: 'Fix Config File Permissions'
        run: |
          oci setup repair-file-permissions --file ~/.oci/config
          oci setup repair-file-permissions --file ~/.oci/key.pem
      - name: Config KUBECONFIG
        run: |
          echo "Getting Compartment ID"
          CMD="oci iam compartment list \
            --compartment-id-in-subtree TRUE \
            --all \
            --query 'data[?\"name\"==\`COMPARTMENT_NAME\`].id'"
          CMD=$(sed -e "s/\COMPARTMENT_NAME/${{secrets.COMPARTMENT_NAME}}/g" <<< $CMD)
          COMPARTMENT_ID=$(eval $(echo "$CMD | grep ocid | sed 's/\"//g' | sed 's/ //g'"))
          echo "COMPARTMENT_ID=${COMPARTMENT_ID}" >> $GITHUB_ENV
          
          echo "Retrieve OKE Admin cluster ID"
          CMD="oci ce cluster list \
            --compartment-id $COMPARTMENT_ID \
            --query 'data[?\"name\"==\`CLUSTER_NAME\` && \"lifecycle-state\"!=\`DELETED\`].id'"
          CMD=$(sed -e "s/\CLUSTER_NAME/${{secrets.CLUSTER_NAME}}/g" <<< $CMD)
          CLUSTER_ID=$(eval $(echo "$CMD | grep ocid | sed 's/\"//g' | sed 's/ //g'"))
          echo "CLUSTER_ID=${CLUSTER_ID}" >> $GITHUB_ENV
          mkdir ~/k8s_dir
          ADMIN_KUBECONFIG=/home/runner/k8s_dir/${{secrets.CLUSTER_NAME}}.conf
          rm -rf $ADMIN_KUBECONFIG
          oci ce cluster create-kubeconfig \
            --cluster-id $CLUSTER_ID \
            --file $ADMIN_KUBECONFIG \
            --region ${{secrets.OCI_REGION}} \
            --token-version 2.0.0 \
            --kube-endpoint PUBLIC_ENDPOINT
          KUBECONFIG=$ADMIN_KUBECONFIG
          echo "KUBECONFIG=${KUBECONFIG}" >> $GITHUB_ENV
          echo "ADMIN_KUBECONFIG=${ADMIN_KUBECONFIG}" >> $GITHUB_ENV
          KUBECONFIG=$ADMIN_KUBECONFIG kubectl version 
          KUBECONFIG=$ADMIN_KUBECONFIG kubectl get nodes

          echo "Retrieve OKE Managed cluster ID"
          CMD="oci ce cluster list \
            --compartment-id $COMPARTMENT_ID \
            --query 'data[?\"name\"==\`CLUSTER_NAME\` && \"lifecycle-state\"!=\`DELETED\`].id'"
          CMD=$(sed -e "s/\CLUSTER_NAME/${{secrets.OKE_MANAGED_CLUSTER_NAME}}/g" <<< $CMD)
          CLUSTER_ID=$(eval $(echo "$CMD | grep ocid | sed 's/\"//g' | sed 's/ //g'"))
          echo "CLUSTER_ID=${CLUSTER_ID}" >> $GITHUB_ENV
          mkdir ~/k8s_dir
          MANAGED_KUBECONFIG=/home/runner/k8s_dir/${{secrets.OKE_MANAGED_CLUSTER_NAME}}.conf
          rm -rf $KUBECONFIG_FILE
          oci ce cluster create-kubeconfig \
            --cluster-id $CLUSTER_ID \
            --file $MANAGED_KUBECONFIG \
            --region ${{secrets.OCI_REGION}} \
            --token-version 2.0.0 \
            --kube-endpoint PUBLIC_ENDPOINT
          KUBECONFIG=$MANAGED_KUBECONFIG
          echo "KUBECONFIG=${KUBECONFIG}" >> $GITHUB_ENV
          echo "MANAGED_KUBECONFIG=${MANAGED_KUBECONFIG}" >> $GITHUB_ENV
          KUBECONFIG=$MANAGED_KUBECONFIG kubectl version 
          KUBECONFIG=$MANAGED_KUBECONFIG kubectl get nodes
          
      - name: Register Managed Cluster
        run: |
          KUBECONFIG=$ADMIN_KUBECONFIG kubectl get verrazzano
          KUBECONFIG=$MANAGED_KUBECONFIG kubectl get verrazzano 
